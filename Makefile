# Compiler
CC = gcc

# Tools
BISON = bison
FLEX = flex

# Source directory
SRC_DIR = src

# Compiler flags
CFLAGS = -Wall -Werror -g

# Special flags for lex.yy.c to suppress warnings about unused functions
LEX_FLAGS = -Wno-unused-function

# Bison and Flex files
BISON_FILE = $(SRC_DIR)/parser.y
FLEX_FILE = $(SRC_DIR)/lexer.l

# Files generated by Bison
BISON_C = $(SRC_DIR)/parser.tab.c
BISON_H = $(SRC_DIR)/parser.tab.h

# Files generated by Flex
FLEX_C = $(SRC_DIR)/lex.yy.c

# Further C source code files
C_SRC = $(filter-out $(BISON_C) $(FLEX_C), $(wildcard $(SRC_DIR)/*.c))

# All C source code files that are to be compiled
SRC = $(C_SRC) $(BISON_C) $(FLEX_C)

# Object files
OBJS = $(SRC:.c=.o)

# Target executable
TARGET = cvc5-proof-decoder

# Default target
all: $(TARGET)

# Linking of executables
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $(TARGET) $(OBJS)

# Generate parser.tab.c and parser.tab.h from parser.y (Bison)
$(BISON_C) $(BISON_H): $(BISON_FILE)
	$(BISON) -d -o $(BISON_C) $(BISON_FILE)

# Generate lex.yy.c from lexer.l (Flex) (depending from Bison header)
$(FLEX_C): $(FLEX_FILE) $(BISON_H)
	$(FLEX) -o $(FLEX_C) $(FLEX_FILE)

# Compilation of lex.yy.c with special flags to suppress warnings about unused functions
$(SRC_DIR)/lex.yy.o: $(FLEX_C)
	$(CC) $(CFLAGS) $(LEX_FLAGS) -c $(FLEX_C) -o $(SRC_DIR)/lex.yy.o

# Generic rule to compile from .c to .o
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up
clean:
	rm -f $(OBJS) $(TARGET) $(BISON_C) $(BISON_H) $(FLEX_C)